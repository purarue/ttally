#!/usr/bin/env bash
# add water now
# first argument specifies number of glasses
#
# e.g. wn 1.5 to add 1.5 glasses
#
# 'wn -p' prints most common glass counts
# that can be used like
# wn -p | fzf | cut -d' ' -f2 | xargs -r wn
# to add that number of glasses to the water file
#
# I call this using an i3 mode launcher:
# https://github.com/seanbreckenridge/dotfiles/commit/5b0943507593fee7c59bf337ae2f16500731e140

# i.e. on a terminal
declare ON_TTY=1
hash tty 2>/dev/null && [[ "$(tty)" == "not a tty" ]] && ON_TTY=0
declare -rx ON_TTY

set -e
havecmd jq
havecmd awk
havecmd chomp 'Install from https://github.com/seanbreckenridge/chomp'
set +e

main() {

	while getopts "p" opt; do
		case "${opt}" in
		p)
			# get an ordered list of the most common glass counts
			# print/send a notification of the the most common bindings
			python3 -m ttally export water --stream |
				jq '.glasses' |
				sort -n |
				uniq -c |
				chomp |
				sort -rn |
				cut -d' ' -f2 |
				head -n9
			exit 0
			;;
		*)
			printf 'Unknown argument: %s\n' "${opt}"
			exit 1
			;;
		esac
	done

	shift "$((OPTIND - 1))"

	# default to '1' glass, if no arguments are supplied
	local GLASSES
	GLASSES="${1:-1}"

	ttally-say "[water] adding ${GLASSES}"

	# construct JSON and send it to ttally to add to the file
	local JSON_DATA
	JSON_DATA="$(jq -n \
		--arg TIMESTAMP "$(date '+%s')" \
		--arg GLASSES "${GLASSES}" \
		'[{"when":$TIMESTAMP | tonumber, "glasses": $GLASSES | tonumber}]')" || return $?
	python3 -m ttally from-json water <<<"${JSON_DATA}" || return $?

	# print recent items so I can review
	ttally-say "$(python3 -m ttally recent water)"
}

main "$@" || exit $?
