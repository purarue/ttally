#!/usr/bin/env bash
# an adaption of https://github.com/seanbreckenridge/calories-scripts
# to work on my own calories system
#
# prompts me with fzf to pick something from my 'food'
# pass the '-n' flag to prompt for datetime using autotui

with_date() {
	local JSON_DATA
	JSON_DATA="$(jq -n \
		--arg TIMESTAMP "$(date '+%s')" \
		--arg CALORIES "$1" \
		--arg FOODNAME "$2" \
		'[{"when":$TIMESTAMP | tonumber, "food": $FOODNAME, "calories": $CALORIES | tonumber}]')" || return $?
	python3 -m ttally from-json food <<<"${JSON_DATA}"
}

without_date() {
	local JSON_DATA TEMPFILE
	JSON_DATA="$(jq -n \
		--arg CALORIES "$1" \
		--arg FOODNAME "$2" \
		'[{"food": $FOODNAME, "calories": $CALORIES | tonumber}]')" || return $?
	TEMPFILE="$(mktemp)"
	printf '%s' "${JSON_DATA}" >"${TEMPFILE}"
	python3 -m ttally from-json --partial food --file "${TEMPFILE}" || return $?
	rm "${TEMPFILE}"
}

main() {
	local SELECTED USE_NOW
	local -a CHOSEN

	# prompt for datetime instead
	USE_NOW='1'
	if [[ "$1" == "--not-now" || "$1" == '-n' ]]; then
		USE_NOW='0'
		shift
	fi

	SELECTED="$(python3 -m ttally export food --stream | jq -r '"\(.calories)|\(.food)"' | awk '!seen[$0]++' |
		fzf -q "$*" --header="What to add to calories?")" || {
		echo "Didn't select anything to add to calories..." 1>&2
		return 1
	}
	# split into array
	readarray -d "|" -t CHOSEN <<<"${SELECTED}"
	if [[ "${#CHOSEN[@]}" != 2 ]]; then
		printf "Error splitting '%s' into two elements, food description can't contain the pipe '|' character\n" "$SELECTED" 1>&2
		return 1
	fi

	local CALS FOODNAME
	CALS="${CHOSEN[0]}"
	FOODNAME="${CHOSEN[1]/$'\n'/}"
	if ((USE_NOW == 0)); then
		without_date "$CALS" "$FOODNAME" || return $?
	else
		with_date "$CALS" "$FOODNAME" || return $?
	fi
	python3 -m ttally recent food
}

main "$@" || exit $?
