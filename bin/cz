#!/usr/bin/env bash
# an adaption of https://github.com/seanbreckenridge/calories-scripts
# to work on ttally
#
# prompts me with fzf to pick something from my 'food'
# pass the '-d' flag to prompt for datetime using autotui

set -u

abort() {
	# shellcheck disable=SC2059
	printf "$@" 1>&2
	exit 1
}

havecmd() {
	local BINARY ERRMSG
	BINARY="${1:?Must provide command to check}"
	command -v "${BINARY}" >/dev/null 2>&1 || {
		ERRMSG="cz requires '${BINARY}', could not find that on your \$PATH"
		[[ -n "$2" ]] && ERRMSG="${ERRMSG}. $2"
		abort '%s\n' "${ERRMSG}"
	}
}

havecmd jq
havecmd fzf
havecmd chomp 'Install from https://github.com/seanbreckenridge/chomp'

add_to_food() {
	local JSON_DATA TEMPFILE
	JSON_DATA="$(jq -n \
		--arg CALORIES "$1" \
		--arg FOODNAME "$2" \
		--arg WATER "$3" \
		'{"food": $FOODNAME, "calories": $CALORIES | tonumber, "water": $WATER | tonumber}')" || return $?
	[[ -n "$4" ]] && JSON_DATA="$(jq --arg TIMESTAMP "$4" '. + {"when": $TIMESTAMP | tonumber}' <<<"${JSON_DATA}")"
	TEMPFILE="$(mktemp)"
	jq --slurp <<<"${JSON_DATA}" >"${TEMPFILE}"
	python3 -m ttally from-json --partial food --file "${TEMPFILE}" || return $?
	rm "${TEMPFILE}"
}

# pick using fzf if on a terminal, or https://sean.fish/d/picker if run with a keybinding
pick() {
	fzf -q "$*" --header='What to add to calories?' || return $?
}

main() {
	local SELECTED USE_NOW
	local -a CHOSEN

	# prompt for datetime instead
	USE_NOW='1'
	while getopts "dh" opt; do
		case "${opt}" in
		d)
			USE_NOW='0'
			;;
		h)
			printf 'Usage: cz [-h] [-p] [-d]\n'
			printf 'prompts me with fzf to pick something from my food to add again\n'
			printf '\t-h\tShow help message\n'
			printf '\t-d\tPrompt for the datetime\n'
			exit 0
			;;
		*)
			printf 'Unknown argument: %s\n' "${opt}"
			exit 1
			;;
		esac
	done

	shift "$((OPTIND - 1))"

	# pick an item using fzf
	SELECTED="$(python3 -m ttally export food --stream | jq -r '"\(.food)|\(.calories)|\(.water)"' | sort | uniq -c | sort -rn | chomp | cut -d' ' -f2- | pick "$@")" || {
		abort "Didn't select anything to add to calories...\n"
	}

	# split into array
	readarray -d "|" -t CHOSEN <<<"${SELECTED/$'\n'/}"
	if [[ "${#CHOSEN[@]}" != 3 ]]; then
		abort "Error splitting into three elements, food description can't contain the pipe '|' character\n"
	fi

	# add item to food
	local CALS FOODNAME WATER WHEN
	FOODNAME="${CHOSEN[0]}"
	CALS="${CHOSEN[1]}"
	WATER="${CHOSEN[2]}"
	WHEN=''
	((USE_NOW)) && WHEN="$(date +'%s')"
	add_to_food "${CALS}" "${FOODNAME}" "${WATER}" "${WHEN}" || return $?

	# print recent items so I can review
	python3 -m ttally recent food
}

main "$@" || exit $?
